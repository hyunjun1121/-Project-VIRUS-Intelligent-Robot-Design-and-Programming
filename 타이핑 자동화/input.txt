- 25분은 문제 이해부터 구현 및 테스트까지 모든 과정을 포함한 시간입니다. 기본적인 Python 리스트 조작에 익숙한 학생분들의 경우 20분 내외로 해결 가능할 것으로 생각됩니다.

- 전체적으로 적당한 난이도의 문제라고 생각됩니다. 기본적인 리스트 순회, 필터링, 정렬 등의 개념을 잘 이해하고 있다면 큰 어려움 없이 해결할 수 있습니다.

- Problem 1-1과 1-2는 비교적 직관적이며, 기본적인 리스트 조작 능력만 있으면 쉽게 구현 가능합니다. 특히 Problem 1-2에서 범위 조건이 inclusive(≤)인 것을 예시를 통해 파악하는 것이 중요합니다.

- Problem 1-3이 가장 까다로운 부분입니다. 랭킹 변화를 계산하기 위해서는: • 업데이트 전후의 랭킹을 각각 계산해야 함 • theory_point_list를 직접 수정해야 함 (문제 조건) • 랭크 변화 공식을 올바르게 이해해야 함 (old_rank - new_rank)

- 디버깅 포인트로는 Problem 1-3에서 랭킹이 올라갈 때와 내려갈 때의 부호를 헷갈리기 쉽고, theory_point_list 업데이트를 빼먹는 경우가 있을 수 있습니다.

- 전반적으로 CS101 수준에서 기대하는 적절한 난이도이며, 기본기가 탄탄한 학생분들에게는 무난하게 만점을 받을 수 있는 문제라고 생각됩니다.

- 문제 설명이 명확하고 예시가 충분히 제공되어 있어 요구사항을 이해하는 데 도움이 되었습니다. 특히 각 함수별로 입출력 예시가 상세히 나와있어 구현 방향을 잡기 쉬웠습니다.